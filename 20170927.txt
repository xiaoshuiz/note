1.类A1和类A2在同一包中，类A2有个protected的方法testA2，类A1不是类A2的子类（或子类的子类），类A1可以访问类A2的方法testA2。（  ）
正确答案: A   你的答案: B (错误)

正确
错误
解析;见图20170927.png

2.图20170927――throwable
运行时异常： 都是RuntimeException类及其子类异常，如NullPointerException(空指针异常)、IndexOutOfBoundsException(下标越界异常)等，这些异常是不检查异常，程序中可以选择捕获处理，也可以不处理。这些异常一般是由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生。
       运行时异常的特点是Java编译器不会检查它，也就是说，当程序中可能出现这类异常，即使没有用try-catch语句捕获它，也没有用throws子句声明抛出它，也会编译通过。 
非运行时异常 （编译异常）： 是RuntimeException以外的异常，类型上都属于Exception类及其子类。从程序语法角度讲是必须进行处理的异常，如果不处理，程序就不能编译通过。如IOException、SQLException等以及用户自定义的Exception异常，一般情况下不自定义检查异常。

3.关于JSP生命周期的叙述，下列哪些为真?
正确答案: A C   你的答案: A B D (错误)

JSP会先解释成Servlet源文件，然后编译成Servlet类文件
每当用户端运行JSP时，jsp init()方法都会运行一次
每当用户端运行JSP时，jsp service()方法都会运行一次
每当用户端运行JSP时，jsp destroy()方法都会运行一次
解析：
答案：AC
B：init方法：负责初始化Servlet对象。在Servlet的整个生命周期类，init（）方法只被调用一次。
D：destroy方法：销毁Servlet对象，释放占用的资源，Servlet要被卸载时调用

4.下列说法错误的有（ ）
正确答案: A C D   你的答案: B C D (错误)

在类方法中可用this来调用本类的类方法
在类方法中调用本类的类方法时可直接调用
在类方法中只能调用本类中的类方法
在类方法中绝对不能调用实例方法
解析：
A:类方法是指类中被static修饰的方法，无this指针。
C：类方法是可以调用其他类的static方法的。
D:可以在类方法中生成实例对象再调用实例方法。
JAVA中都是运行时对类加载生成对象的。甚至可以说main函数也是类方法啊。